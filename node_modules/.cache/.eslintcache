[{"C:\\Users\\Acer\\Desktop\\Archive\\src\\index.js":"1","C:\\Users\\Acer\\Desktop\\Archive\\src\\App.js":"2","C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\store.js":"3","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\Header\\Header.jsx":"4","C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\user\\reducer.js":"5","C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\user\\actions.js":"6","C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\post\\reducer.js":"7","C:\\Users\\Acer\\Desktop\\Archive\\src\\Pages\\HomePage\\HomePage.jsx":"8","C:\\Users\\Acer\\Desktop\\Archive\\src\\Pages\\Sing-In-Sign-Up\\Sign-In-Sign-Up.jsx":"9","C:\\Users\\Acer\\Desktop\\Archive\\src\\Pages\\QuestionPage\\QuestionPage.jsx":"10","C:\\Users\\Acer\\Desktop\\Archive\\src\\Pages\\ProfilePage\\ProfilePage.jsx":"11","C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\user\\extraReducers.js":"12","C:\\Users\\Acer\\Desktop\\Archive\\src\\posts.js":"13","C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\post\\extraReducers.js":"14","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\Sing-In\\Sign-In.jsx":"15","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\Sign-Up\\Sign-Up.jsx":"16","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\Post\\Question.jsx":"17","C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\post\\actions.js":"18","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\List\\AddReply.js":"19","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\List\\AddQuestion.js":"20","C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\AskQuestion\\actions.js":"21","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\List\\Last20Questions.js":"22","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\MyProfileChange\\ChangePassword.js":"23","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\List\\UpdatePost.js":"24","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\List\\DeleteButton.js":"25","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\List\\List.js":"26","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\List\\Likes.js":"27"},{"size":413,"mtime":1647073514000,"results":"28","hashOfConfig":"29"},{"size":1036,"mtime":1647261782865,"results":"30","hashOfConfig":"29"},{"size":437,"mtime":1647074586000,"results":"31","hashOfConfig":"29"},{"size":1284,"mtime":1649930654822,"results":"32","hashOfConfig":"29"},{"size":484,"mtime":1649154589649,"results":"33","hashOfConfig":"29"},{"size":298,"mtime":1649085795215,"results":"34","hashOfConfig":"29"},{"size":409,"mtime":1649850597902,"results":"35","hashOfConfig":"29"},{"size":318,"mtime":1648646235301,"results":"36","hashOfConfig":"29"},{"size":1217,"mtime":1648646818564,"results":"37","hashOfConfig":"29"},{"size":505,"mtime":1647439073365,"results":"38","hashOfConfig":"29"},{"size":218,"mtime":1649160585502,"results":"39","hashOfConfig":"29"},{"size":189,"mtime":1649155213354,"results":"40","hashOfConfig":"29"},{"size":98,"mtime":1647070907000,"results":"41","hashOfConfig":"29"},{"size":1654,"mtime":1649931177704,"results":"42","hashOfConfig":"29"},{"size":3069,"mtime":1648646708774,"results":"43","hashOfConfig":"29"},{"size":2940,"mtime":1648822307931,"results":"44","hashOfConfig":"29"},{"size":3688,"mtime":1647438934057,"results":"45","hashOfConfig":"29"},{"size":1786,"mtime":1649930992805,"results":"46","hashOfConfig":"29"},{"size":720,"mtime":1649764703548,"results":"47","hashOfConfig":"29"},{"size":789,"mtime":1647464320517,"results":"48","hashOfConfig":"29"},{"size":727,"mtime":1649085838622,"results":"49","hashOfConfig":"29"},{"size":3298,"mtime":1649927303252,"results":"50","hashOfConfig":"29"},{"size":1807,"mtime":1649160675672,"results":"51","hashOfConfig":"29"},{"size":764,"mtime":1649764335273,"results":"52","hashOfConfig":"29"},{"size":635,"mtime":1649848614721,"results":"53","hashOfConfig":"29"},{"size":5061,"mtime":1649930881047,"results":"54","hashOfConfig":"29"},{"size":1020,"mtime":1649931109340,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"zslc3p",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"59"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"59"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"59"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"59"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"59"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Acer\\Desktop\\Archive\\src\\index.js",[],[],["148","149"],"C:\\Users\\Acer\\Desktop\\Archive\\src\\App.js",["150"],[],"import React from \"react\";\n\nimport { Routes, Route, Redirect } from \"react-router-dom\";\n\nimport SignInAndSignUp from \"./Pages/Sing-In-Sign-Up/Sign-In-Sign-Up\";\nimport HomePage from \"./Pages/HomePage/HomePage\";\nimport QuestionPage from \"./Pages/QuestionPage/QuestionPage\";\nimport MyProfile from \"./Pages/ProfilePage/ProfilePage\";\n\nimport Header from \"./Components/Header/Header.jsx\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchUsers } from \"./store/user/actions\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(fetchUsers());\n  });\n\n  return (\n    <div>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} exact />\n        <Route path=\"/signin\" element={<SignInAndSignUp />} />\n        <Route path=\"/HomePage\" element={<HomePage />} />\n        <Route path=\"/MyProfile\" element={<MyProfile />} />\n        <Route path=\"/QuestionPage\" element={<QuestionPage />} />\n      </Routes>\n    </div>\n  );\n};\n\n// Sort posts alphabetically\n\nexport default App;\n","C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\store.js",[],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\Header\\Header.jsx",["151","152","153","154"],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\user\\reducer.js",[],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\user\\actions.js",[],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\post\\reducer.js",["155"],[],"import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { extraReducers } from \"./extraReducers\";\n\nimport { updatePost } from \"./actions\";\n\nconst initialState = {\n  posts: [],\n  loading: false,\n  error: null,\n  body: \"\",\n};\n\nexport const postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {},\n  extraReducers,\n});\n\nexport const { f } = postSlice.actions;\n\nexport default postSlice.reducer;\n","C:\\Users\\Acer\\Desktop\\Archive\\src\\Pages\\HomePage\\HomePage.jsx",["156","157"],[],"import React, { useState } from \"react\";\nimport Lista from \"../../Components/List/List\";\nimport Last20Questions from \"../../Components/List/Last20Questions\"\n\nconst HomePage = () => {\n  return (\n    <div className=\"Main Container\">\n      <Last20Questions />\n      <hr></hr>\n    </div>\n  );\n};\n\nexport default HomePage;\n","C:\\Users\\Acer\\Desktop\\Archive\\src\\Pages\\Sing-In-Sign-Up\\Sign-In-Sign-Up.jsx",[],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\Pages\\QuestionPage\\QuestionPage.jsx",["158","159","160","161","162","163","164"],[],"import React,{useEffect,useState} from \"react\";\nimport QuestionLists from \"../../Components/Post/Question\";\nimport api from '../../posts';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport Lista from \"../../Components/List/List\"\n\nconst QuestionPage = () => { \n\n  \n    return(\n\n        <>\n        <div>\n            <Lista/> \n\n        </div>\n\n\n        </>\n\n    )\n\n}\n\n\n\n\n\n\nexport default QuestionPage;","C:\\Users\\Acer\\Desktop\\Archive\\src\\Pages\\ProfilePage\\ProfilePage.jsx",[],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\user\\extraReducers.js",[],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\posts.js",[],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\post\\extraReducers.js",[],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\Sing-In\\Sign-In.jsx",["165"],[],"import React, { useState } from \"react\";\n\nimport \"./Sign-In.scss\";\n\nimport {\n  Checkbox,\n  Grid,\n  TextField,\n  FormControlLabel,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIsLoggedIn } from \"../../store/user/reducer\";\n\nconst Signin = () => {\n  const [checked, setChecked] = useState(true);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState([]);\n\n  const { users, isLoggedIn } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const handleOnChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"username:\", username, \"password: \", password);\n\n    console.log(users);\n\n    const user = users.find((user) => user.name === username);\n    if (user) {\n      if (user.password === password) {\n        dispatch(setIsLoggedIn(true));\n      } else {\n        console.log(\"wrong password\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className=\"Login-text\">Login</div>\n      <div style={{ padding: 150 }}>\n        <Paper>\n          <Grid\n            container\n            spacing={3}\n            direction={\"column\"}\n            justify={\"center\"}\n            alignItems={\"center\"}\n          >\n            <form onSubmit={handleSubmit}>\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Username\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                  validations={\"\"}\n                ></TextField>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Password\"\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={\"\"}\n                ></TextField>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={checked}\n                      onChange={handleOnChange}\n                      label={\"Keep me logged in\"}\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                    />\n                  }\n                  label=\"Keep me logged in\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button type=\"submit\" fullWidth>\n                  {\" \"}\n                  Login{\" \"}\n                </Button>\n              </Grid>\n            </form>\n          </Grid>\n        </Paper>\n      </div>\n    </>\n  );\n};\n\nexport default Signin;\n","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\Sign-Up\\Sign-Up.jsx",["166","167","168","169","170"],[],"import React, { useState, useEffect } from \"react\";\n\nimport \"./Sign-Up.scss\";\n\nimport { format } from \"date-fns\";\nimport { Button, Comment, Form } from \"semantic-ui-react\";\n\nimport { Grid, TextField, Paper, Typography } from \"@material-ui/core\";\n\nimport api from \"../../Api/db.json\";\n\nconst Register = ({ onRegister }) => {\n  const [userDetails, setUserDetails] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const { name, email, password, confirmPassword } = userDetails;\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setUserDetails({ ...userDetails, [name]: value });\n  };\n\n  const createUser = async () => {\n    await fetch(\"http://localhost:5000/users\", {\n      method: \"POST\",\n      body: JSON.stringify(userDetails),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    await createUser();\n    onRegister();\n  };\n\n  return (\n    <>\n      <div className=\"Login-text\">Register</div>\n      <div style={{ padding: 150 }}>\n        <form onSubmit={handleSubmit}>\n          <Paper>\n            <Grid\n              container\n              spacing={3}\n              direction={\"column\"}\n              justify={\"center\"}\n              alignItems={\"center\"}\n            >\n              <Grid item xs={12}>\n                <TextField\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  onChange={handleChange}\n                  label=\"Name\"\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  type=\"text\"\n                  name=\"email\"\n                  value={email}\n                  onChange={handleChange}\n                  label=\"Email\"\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  type=\"password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={handleChange}\n                  label=\"Password\"\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  value={confirmPassword}\n                  onChange={handleChange}\n                  label=\"Confirm Password\"\n                  required\n                />\n              </Grid>\n              <Typography>Already Have Acc ? </Typography>\n              <Grid item xs={12}>\n                <Button type=\"submit\" fullWidth>\n                  {\" \"}\n                  Register{\" \"}\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </form>\n      </div>\n    </>\n  );\n};\nexport default Register;\n","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\Post\\Question.jsx",["171","172","173","174","175","176","177","178","179","180"],[],"import React, { useState, useEffect } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport api from \"../../posts\";\nimport { format } from \"date-fns\";\nimport { Button, Comment,  Form } from \"semantic-ui-react\";\nimport { Divider, Avatar, Grid, Paper, Box } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { addQuestion  } from \"../../store/AskQuestion/actions\";\n\nconst Question = ({ postId, body }) => {\n  const [post, setPosts] = useState(\"\");\n  const [postBody, setPostBody] = useState(\"\");\n\n  const { posts, loading } = useSelector((store) => store.post);\n\n  const dispatch = useDispatch();\n\n\n\n  const onQuestion = () => {\n    console.log(onQuestion);\n    dispatch(addQuestion({ body: [...body, post], postId }));\n  };\n\n\n\n\n\n  /* const handleSubmit = async (e) => {\n     e.preventDefault();\n     const id = posts.length ? posts[posts.length - 1].id + 1 : 1;\n     const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\n     const newPost = { id, datetime, body: postBody, comments: null };\n     console.log(id + \"  \" + datetime + \"  \" + JSON.stringify(newPost));\n     try {\n      const response = await api.post(\"/posts\", newPost);\n       console.log(response);\n       const allPosts = [...posts, response.data];\n       console.log(allPosts);\n       setPostBody(\"\");\n     } catch (err) {\n       console.log(`Error: ${err.message}`);\n     }\n  };\n\n*/\n\n  return (\n    <>\n    <Box component=\"span\" >\n      <Grid className=\"List-All-Comments-and-questions\">\n        <Form className=\"newPostForm\" onSubmit={\"\"}>\n        <Avatar></Avatar>\n        \n          <label htmlFor=\"postBody\">Post:</label>\n          <TextField\n            id=\"postBody\"\n            required\n            value={postBody}\n            onChange={(e) => setPostBody(e.target.value)}\n          />\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n        \n\n       \n        {/* { users && users.map((users) => (\n            <div> <h2> { users.id && users.question } </h2>\n\n<Paper style={{ padding: \"40px 20px\" }}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar alt=\"Remy Sharp\"  />\n          </Grid>\n          <Grid justifyContent=\"left\" item xs zeroMinWidth>\n            <h4 style={{ margin: 0, textAlign: \"left\" }}>{users.id && users.first_name }</h4>\n            <p style={{ textAlign: \"left\" }}>\n              {users.comment}\n            </p>\n            <p style={{ textAlign: \"left\", color: \"gray\" }}>\n              {users.time}\n            </p>\n          </Grid>\n          \n        </Grid>\n        <Form reply>\n          <Form.TextArea />\n          <Button\n            content='Add Reply'\n            labelPosition='left'\n            icon='edit'\n            primary\n          />\n        </Form>\n        <h2> { users.id && users.question } </h2>\n        <Divider variant=\"fullWidth\" style={{ margin: \"30px 0\" }} />\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar alt=\"Remy Sharp\" />\n          </Grid>\n          <Grid justifyContent=\"left\" item xs zeroMinWidth>\n            <h4 style={{ margin: 0, textAlign: \"left\" }}>Michel Michel</h4>\n            <p style={{ textAlign: \"left\" }}>\n            </p>\n            <p style={{ textAlign: \"left\", color: \"gray\" }}>\n]            </p>\n          </Grid>\n        </Grid>\n        <Form reply>\n          <Form.TextArea />\n          <Button\n            content='Add Reply'\n            labelPosition='left'\n            icon='edit'\n            primary\n          />\n        </Form>\n      </Paper>\n</div>\n            ))} */}\n      </Grid>\n      </Box>\n    </>\n  );\n};\n\nexport default Question;\n","C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\post\\actions.js",[],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\List\\AddReply.js",[],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\List\\AddQuestion.js",[],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\store\\AskQuestion\\actions.js",[],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\List\\Last20Questions.js",["181","182","183","184","185","186","187","188","189","190","191","192","193"],[],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Avatar, Paper, TextField } from \"@material-ui/core\";\r\nimport { Button, Form, Grid, Input } from \"semantic-ui-react\";\r\nimport { fetchPosts } from \"../../store/post/actions\";\r\nimport { AddReply } from \"./AddReply\";\r\nimport Question from \"../Post/Question\";\r\nimport { QuestionAdd } from \"./AddQuestion\";\r\n\r\nimport {\r\n  deletePost,\r\n  getPost,\r\n  setEdit,\r\n  updatePost,\r\n} from \"../../store/post/actions\";\r\n\r\nconst ListQuestionsOnly = () => {\r\n  const { posts, loading, isLoggedIn } = useSelector((store) => {\r\n    return {\r\n      posts: store.post.posts,\r\n      loading: store.post.loading,\r\n      isLoggedIn: store.user.isLoggedIn,\r\n    };\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    console.log(\"DISPATCH\");\r\n    dispatch(fetchPosts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <List sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}>\r\n        <Paper style={{ padding: \"40px 20px\" }}>\r\n          <QuestionAdd />\r\n        </Paper>\r\n\r\n        <ListItem alignItems=\"flex-start\">\r\n          <ListItemText\r\n            primary=\"List All Questions and comments , ASK IF YOU ARE LOGGED\"\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  sx={{ display: \"inline\" }}\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"text.primary\"\r\n                ></Typography>\r\n                {posts.map((post) => (\r\n                  <div>\r\n                    <Paper style={{ padding: \"40px 20px\" }}>\r\n                      <Grid container wrap=\"nowrap\" spacing={2}>\r\n                        <Grid item>\r\n                          <Avatar alt=\"Remy Sharp\" />\r\n                        </Grid>\r\n                        <Grid justifyContent=\"left\" item xs zeroMinWidth>\r\n                          <h4 style={{ margin: 0, textAlign: \"left\" }}>\r\n                            {post.first_name}\r\n                          </h4>\r\n\r\n                          {post.time}\r\n                        </Grid>\r\n                        <Grid justifyContent=\"right\" item xs zeroMinWidth>\r\n                          <p>{post.body}</p>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <div>\r\n                        <Paper style={{ margin: \"10px\", padding: \"10px 20px\" }}>\r\n                          <Grid container wrap=\"nowrap\" spacing={2}>\r\n                            <Grid\r\n                              justifyContent=\"left\"\r\n                              item\r\n                              xs\r\n                              zeroMinWidth\r\n                            ></Grid>\r\n                          </Grid>\r\n                        </Paper>\r\n                      </div>\r\n                    </Paper>\r\n                  </div>\r\n                ))}\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListQuestionsOnly;\r\n","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\MyProfileChange\\ChangePassword.js",["194","195","196","197","198","199","200","201","202","203"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { format } from \"date-fns\";\r\nimport { Button, Comment, Form } from \"semantic-ui-react\";\r\n\r\nimport { Grid, TextField, Paper, Typography } from \"@material-ui/core\";\r\n\r\nimport api from \"../../Api/db.json\";\r\n\r\nconst EditProfile = ({ userId, password }) => {\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = () => {};\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Login-text\">ChangePassword</div>\r\n      <div style={{ padding: 150 }}>\r\n        <form onSubmit={\"\"}>\r\n          <Paper>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n              direction={\"column\"}\r\n              justify={\"center\"}\r\n              alignItems={\"center\"}\r\n            >\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={handleChange}\r\n                  label=\"Password\"\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  value={\"\"}\r\n                  onChange={handleChange}\r\n                  label=\"Confirm Password\"\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button type=\"submit\" fullWidth>\r\n                  {\" \"}\r\n                  ChangePassword{\" \"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default EditProfile;\r\n","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\List\\UpdatePost.js",[],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\List\\DeleteButton.js",["204"],[],"import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport { deletePost } from \"../../store/post/actions\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const DeletePost = ({ postId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeletePost = () => {\r\n    console.log(deletePost);\r\n    dispatch(deletePost({ postId: postId }));\r\n  };\r\n\r\n  return (\r\n    <Form DeletePost>\r\n      <Button\r\n        content=\"Delete\"\r\n        labelPosition=\"left\"\r\n        icon=\"edit\"\r\n        primary\r\n        onClick={onDeletePost}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n","C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\List\\List.js",["205","206","207","208","209","210","211","212"],[],"C:\\Users\\Acer\\Desktop\\Archive\\src\\Components\\List\\Likes.js",["213"],[],{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":3,"column":25,"nodeType":"220","messageId":"221","endLine":3,"endColumn":33},{"ruleId":"218","severity":1,"message":"222","line":3,"column":10,"nodeType":"220","messageId":"221","endLine":3,"endColumn":20},{"ruleId":"218","severity":1,"message":"223","line":18,"column":11,"nodeType":"220","messageId":"221","endLine":18,"endColumn":16},{"ruleId":"218","severity":1,"message":"224","line":18,"column":18,"nodeType":"220","messageId":"221","endLine":18,"endColumn":25},{"ruleId":"218","severity":1,"message":"225","line":18,"column":27,"nodeType":"220","messageId":"221","endLine":18,"endColumn":37},{"ruleId":"218","severity":1,"message":"226","line":5,"column":10,"nodeType":"220","messageId":"221","endLine":5,"endColumn":20},{"ruleId":"218","severity":1,"message":"227","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":25},{"ruleId":"218","severity":1,"message":"228","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":13},{"ruleId":"218","severity":1,"message":"229","line":1,"column":15,"nodeType":"220","messageId":"221","endLine":1,"endColumn":24},{"ruleId":"218","severity":1,"message":"227","line":1,"column":25,"nodeType":"220","messageId":"221","endLine":1,"endColumn":33},{"ruleId":"218","severity":1,"message":"230","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":21},{"ruleId":"218","severity":1,"message":"231","line":3,"column":8,"nodeType":"220","messageId":"221","endLine":3,"endColumn":11},{"ruleId":"218","severity":1,"message":"232","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":18},{"ruleId":"218","severity":1,"message":"233","line":5,"column":8,"nodeType":"220","messageId":"221","endLine":5,"endColumn":12},{"ruleId":"218","severity":1,"message":"234","line":6,"column":8,"nodeType":"220","messageId":"221","endLine":6,"endColumn":16},{"ruleId":"218","severity":1,"message":"225","line":21,"column":18,"nodeType":"220","messageId":"221","endLine":21,"endColumn":28},{"ruleId":"218","severity":1,"message":"229","line":1,"column":27,"nodeType":"220","messageId":"221","endLine":1,"endColumn":36},{"ruleId":"218","severity":1,"message":"235","line":5,"column":10,"nodeType":"220","messageId":"221","endLine":5,"endColumn":16},{"ruleId":"218","severity":1,"message":"236","line":6,"column":18,"nodeType":"220","messageId":"221","endLine":6,"endColumn":25},{"ruleId":"218","severity":1,"message":"237","line":6,"column":27,"nodeType":"220","messageId":"221","endLine":6,"endColumn":31},{"ruleId":"218","severity":1,"message":"231","line":10,"column":8,"nodeType":"220","messageId":"221","endLine":10,"endColumn":11},{"ruleId":"218","severity":1,"message":"229","line":1,"column":27,"nodeType":"220","messageId":"221","endLine":1,"endColumn":36},{"ruleId":"218","severity":1,"message":"231","line":3,"column":8,"nodeType":"220","messageId":"221","endLine":3,"endColumn":11},{"ruleId":"218","severity":1,"message":"235","line":4,"column":10,"nodeType":"220","messageId":"221","endLine":4,"endColumn":16},{"ruleId":"218","severity":1,"message":"236","line":5,"column":18,"nodeType":"220","messageId":"221","endLine":5,"endColumn":25},{"ruleId":"218","severity":1,"message":"238","line":6,"column":10,"nodeType":"220","messageId":"221","endLine":6,"endColumn":17},{"ruleId":"218","severity":1,"message":"239","line":6,"column":33,"nodeType":"220","messageId":"221","endLine":6,"endColumn":38},{"ruleId":"218","severity":1,"message":"240","line":12,"column":16,"nodeType":"220","messageId":"221","endLine":12,"endColumn":24},{"ruleId":"218","severity":1,"message":"223","line":15,"column":11,"nodeType":"220","messageId":"221","endLine":15,"endColumn":16},{"ruleId":"218","severity":1,"message":"224","line":15,"column":18,"nodeType":"220","messageId":"221","endLine":15,"endColumn":25},{"ruleId":"218","severity":1,"message":"241","line":21,"column":9,"nodeType":"220","messageId":"221","endLine":21,"endColumn":19},{"ruleId":"218","severity":1,"message":"227","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":25},{"ruleId":"218","severity":1,"message":"242","line":8,"column":25,"nodeType":"220","messageId":"221","endLine":8,"endColumn":34},{"ruleId":"218","severity":1,"message":"243","line":9,"column":10,"nodeType":"220","messageId":"221","endLine":9,"endColumn":16},{"ruleId":"218","severity":1,"message":"237","line":9,"column":18,"nodeType":"220","messageId":"221","endLine":9,"endColumn":22},{"ruleId":"218","severity":1,"message":"244","line":9,"column":30,"nodeType":"220","messageId":"221","endLine":9,"endColumn":35},{"ruleId":"218","severity":1,"message":"245","line":11,"column":10,"nodeType":"220","messageId":"221","endLine":11,"endColumn":18},{"ruleId":"218","severity":1,"message":"246","line":12,"column":8,"nodeType":"220","messageId":"221","endLine":12,"endColumn":16},{"ruleId":"218","severity":1,"message":"247","line":16,"column":3,"nodeType":"220","messageId":"221","endLine":16,"endColumn":13},{"ruleId":"218","severity":1,"message":"248","line":17,"column":3,"nodeType":"220","messageId":"221","endLine":17,"endColumn":10},{"ruleId":"218","severity":1,"message":"249","line":18,"column":3,"nodeType":"220","messageId":"221","endLine":18,"endColumn":10},{"ruleId":"218","severity":1,"message":"226","line":19,"column":3,"nodeType":"220","messageId":"221","endLine":19,"endColumn":13},{"ruleId":"218","severity":1,"message":"224","line":23,"column":18,"nodeType":"220","messageId":"221","endLine":23,"endColumn":25},{"ruleId":"218","severity":1,"message":"225","line":23,"column":27,"nodeType":"220","messageId":"221","endLine":23,"endColumn":37},{"ruleId":"218","severity":1,"message":"227","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":25},{"ruleId":"218","severity":1,"message":"229","line":1,"column":27,"nodeType":"220","messageId":"221","endLine":1,"endColumn":36},{"ruleId":"218","severity":1,"message":"235","line":4,"column":10,"nodeType":"220","messageId":"221","endLine":4,"endColumn":16},{"ruleId":"218","severity":1,"message":"236","line":5,"column":18,"nodeType":"220","messageId":"221","endLine":5,"endColumn":25},{"ruleId":"218","severity":1,"message":"237","line":5,"column":27,"nodeType":"220","messageId":"221","endLine":5,"endColumn":31},{"ruleId":"218","severity":1,"message":"232","line":7,"column":34,"nodeType":"220","messageId":"221","endLine":7,"endColumn":44},{"ruleId":"218","severity":1,"message":"231","line":9,"column":8,"nodeType":"220","messageId":"221","endLine":9,"endColumn":11},{"ruleId":"218","severity":1,"message":"250","line":12,"column":10,"nodeType":"220","messageId":"221","endLine":12,"endColumn":15},{"ruleId":"218","severity":1,"message":"251","line":12,"column":17,"nodeType":"220","messageId":"221","endLine":12,"endColumn":25},{"ruleId":"218","severity":1,"message":"252","line":14,"column":9,"nodeType":"220","messageId":"221","endLine":14,"endColumn":17},{"ruleId":"218","severity":1,"message":"253","line":6,"column":10,"nodeType":"220","messageId":"221","endLine":6,"endColumn":21},{"ruleId":"218","severity":1,"message":"242","line":10,"column":25,"nodeType":"220","messageId":"221","endLine":10,"endColumn":34},{"ruleId":"218","severity":1,"message":"237","line":11,"column":18,"nodeType":"220","messageId":"221","endLine":11,"endColumn":22},{"ruleId":"218","severity":1,"message":"244","line":11,"column":30,"nodeType":"220","messageId":"221","endLine":11,"endColumn":35},{"ruleId":"218","severity":1,"message":"247","line":18,"column":10,"nodeType":"220","messageId":"221","endLine":18,"endColumn":20},{"ruleId":"218","severity":1,"message":"249","line":18,"column":22,"nodeType":"220","messageId":"221","endLine":18,"endColumn":29},{"ruleId":"218","severity":1,"message":"226","line":18,"column":31,"nodeType":"220","messageId":"221","endLine":18,"endColumn":41},{"ruleId":"218","severity":1,"message":"254","line":20,"column":10,"nodeType":"220","messageId":"221","endLine":20,"endColumn":22},{"ruleId":"218","severity":1,"message":"224","line":23,"column":18,"nodeType":"220","messageId":"221","endLine":23,"endColumn":25},{"ruleId":"218","severity":1,"message":"243","line":3,"column":10,"nodeType":"220","messageId":"221","endLine":3,"endColumn":16},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'IsLoggedIn' is defined but never used.","'posts' is assigned a value but never used.","'loading' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'updatePost' is defined but never used.","'useState' is defined but never used.","'Lista' is defined but never used.","'useEffect' is defined but never used.","'QuestionLists' is defined but never used.","'api' is defined but never used.","'Typography' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'format' is defined but never used.","'Comment' is defined but never used.","'Form' is defined but never used.","'Divider' is defined but never used.","'Paper' is defined but never used.","'setPosts' is assigned a value but never used.","'onQuestion' is assigned a value but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","'AddReply' is defined but never used.","'Question' is defined but never used.","'deletePost' is defined but never used.","'getPost' is defined but never used.","'setEdit' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'useSelector' is defined but never used.","'onUpdatePost' is defined but never used.","no-global-assign","no-unsafe-negation"]