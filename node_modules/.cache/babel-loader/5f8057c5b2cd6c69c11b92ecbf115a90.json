{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Archive\\\\src\\\\Components\\\\List\\\\List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Avatar, Paper, TextField } from \"@material-ui/core\";\nimport { Button, Form, Grid, Input } from \"semantic-ui-react\";\nimport { fetchPosts } from \"../../store/post/actions\";\nimport { AddReply } from \"./AddReply\";\nimport { Question } from \"../Post/Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Lista = () => {\n  _s();\n\n  const [users, setUsers] = useState(null);\n  const {\n    posts,\n    loading,\n    isLoggedIn\n  } = useSelector(store => {\n    return {\n      posts: store.post.posts,\n      loading: store.post.loading,\n      isLoggedIn: store.user.isLoggedIn\n    };\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(\"DISPATCH\");\n    dispatch(fetchPosts());\n  }, [dispatch]);\n  const [comment, setComment] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: \"100%\",\n        maxWidth: 360,\n        bgcolor: \"background.paper\"\n      },\n      children: [isLoggedIn && /*#__PURE__*/_jsxDEV(Question, {\n        postId: post.id,\n        body: post.body || []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Question, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"List All Questions\",\n          secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                display: \"inline\"\n              },\n              component: \"span\",\n              variant: \"body2\",\n              color: \"text.primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                style: {\n                  padding: \"40px 20px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  wrap: \"nowrap\",\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      alt: \"Remy Sharp\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    justifyContent: \"left\",\n                    item: true,\n                    xs: true,\n                    zeroMinWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      style: {\n                        margin: 0,\n                        textAlign: \"left\"\n                      },\n                      children: post.first_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: post.comment\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        textAlign: \"left\",\n                        color: \"gray\"\n                      },\n                      children: post.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    justifyContent: \"right\",\n                    item: true,\n                    xs: true,\n                    zeroMinWidth: true,\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: post.body\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 23\n                }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(AddReply, {\n                  postId: post.id,\n                  comments: post.comments || []\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 25\n                }, this), post.comments && post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Paper, {\n                    style: {\n                      margin: \"10px\",\n                      padding: \"10px 20px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      wrap: \"nowrap\",\n                      spacing: 2,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        justifyContent: \"left\",\n                        item: true,\n                        xs: true,\n                        zeroMinWidth: true,\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          style: {\n                            textAlign: \"left\"\n                          },\n                          children: comment\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 97,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 27\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Lista, \"zZV3UA5kP/bVQMXUMGI4jO2h3vI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Lista;\nexport default Lista;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lista\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Archive/src/Components/List/List.jsx"],"names":["React","useState","useEffect","List","ListItem","Typography","ListItemText","useDispatch","useSelector","Avatar","Paper","TextField","Button","Form","Grid","Input","fetchPosts","AddReply","Question","Lista","users","setUsers","posts","loading","isLoggedIn","store","post","user","dispatch","console","log","comment","setComment","width","maxWidth","bgcolor","id","body","display","map","padding","margin","textAlign","first_name","color","time","comments"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Avatar, Paper, TextField } from \"@material-ui/core\";\nimport { Button, Form, Grid, Input } from \"semantic-ui-react\";\nimport { fetchPosts } from \"../../store/post/actions\";\nimport { AddReply } from \"./AddReply\";\nimport {Question} from \"../Post/Question\";\n\nconst Lista = () => {\n  const [users, setUsers] = useState(null);\n\n  const { posts, loading, isLoggedIn } = useSelector((store) => {\n    return {\n      posts: store.post.posts,\n      loading: store.post.loading,\n      isLoggedIn: store.user.isLoggedIn,\n    };\n  });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log(\"DISPATCH\");\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const [comment, setComment] = useState(\"\");\n\n\n  return (\n    <>\n      <List sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}>\n        {isLoggedIn && (\n          <Question \n          postId={post.id}\n          body={post.body || []}\n           />\n        )}\n      <Question  />\n        <ListItem alignItems=\"flex-start\">\n          <TextField></TextField>\n          <ListItemText\n            primary=\"List All Questions\"\n            secondary={\n              <React.Fragment>\n                <Typography\n                  sx={{ display: \"inline\" }}\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"text.primary\"\n                ></Typography>\n                {posts.map((post) => (\n                  <div>\n                    <Paper style={{ padding: \"40px 20px\" }}>\n                      <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item>\n                          <Avatar alt=\"Remy Sharp\" />\n                        </Grid>\n                        <Grid justifyContent=\"left\" item xs zeroMinWidth>\n                          <h4 style={{ margin: 0, textAlign: \"left\" }}>\n                            {post.first_name}\n                          </h4>\n                          <p style={{ textAlign: \"left\" }}>{post.comment}</p>\n                          <p style={{ textAlign: \"left\", color: \"gray\" }}>\n                            {post.time}\n                          </p>\n                        </Grid>\n                        <Grid justifyContent=\"right\" item xs zeroMinWidth>\n                          <p>{post.body}</p>\n                        </Grid>\n                      </Grid>\n                      {isLoggedIn && (\n                        <AddReply\n                          postId={post.id}\n                          comments={post.comments || []}\n                        />\n                      )}\n                      {/* List of comments with likes */}\n                      {post.comments &&\n                        post.comments.map((comment) => (\n                          <div>\n                            <Paper\n                              style={{ margin: \"10px\", padding: \"10px 20px\" }}\n                            >\n                              <Grid container wrap=\"nowrap\" spacing={2}>\n                                <Grid\n                                  justifyContent=\"left\"\n                                  item\n                                  xs\n                                  zeroMinWidth\n                                >\n                                  <p style={{ textAlign: \"left\" }}>{comment}</p>\n                                </Grid>\n                              </Grid>\n                            </Paper>\n                          </div>\n                        ))}\n                    </Paper>\n                  </div>\n                ))}\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      </List>\n    </>\n  );\n};\n\nexport default Lista;\n"]},"metadata":{},"sourceType":"module"}