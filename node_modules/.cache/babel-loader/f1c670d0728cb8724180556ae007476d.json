{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Archive\\\\src\\\\Components\\\\List\\\\AddReply.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { addComment } from \"../../store/post/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddReply = _ref => {\n  _s();\n\n  let {\n    postId,\n    comments\n  } = _ref;\n  const [value, setValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n\n  const onAddReply = () => {\n    console.log(onAddReply);\n    dispatch(addComment({\n      comments: [...comments, value],\n      postId\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group col-md-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newPassword\",\n        className: \"labelProfile\",\n        children: \"New password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"newPassword\",\n        pattern: \".{5,}\",\n        title: \"minimum 5 characters\",\n        value: newPass,\n        onChange: e => setNewPass(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group col-md-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        className: \"labelProfile\",\n        children: \"Confirm new password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"confirmPassword\",\n        pattern: \".{5,}\",\n        title: \"minimum 5 characters\",\n        value: confirmPass,\n        onChange: e => setConfirmPass(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success col-3 btnSubmit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddReply, \"NPbtUjvQSnkfrGkC/2oIzUuQxUQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddReply;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReply\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Archive/src/Components/List/AddReply.js"],"names":["React","useDispatch","Button","Form","addComment","AddReply","postId","comments","value","setValue","useState","dispatch","onAddReply","console","log","onSubmit","newPass","e","setNewPass","target","confirmPass","setConfirmPass"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAA0B;AAAA;;AAAA,MAAzB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAyB;AAChD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAe,EAAf,CAA1B;AAEA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,UAAU,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAD,IAAAA,QAAQ,CAACP,UAAU,CAAC;AAAEG,MAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ,EAAcC,KAAd,CAAZ;AAAkCF,MAAAA;AAAlC,KAAD,CAAX,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,QAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,aAAf;AAA6B,QAAA,SAAS,EAAC,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,EAAE,EAAC,aAHL;AAIE,QAAA,OAAO,EAAC,OAJV;AAKE,QAAA,KAAK,EAAC,sBALR;AAME,QAAA,KAAK,EAAEC,OANT;AAOE,QAAA,QAAQ,EAAGC,CAAD,IAAOC,UAAU,CAACD,CAAC,CAACE,MAAF,CAASX,KAAV,CAP7B;AAQE,QAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAiC,QAAA,SAAS,EAAC,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,EAAE,EAAC,iBAHL;AAIE,QAAA,OAAO,EAAC,OAJV;AAKE,QAAA,KAAK,EAAC,sBALR;AAME,QAAA,KAAK,EAAEY,WANT;AAOE,QAAA,QAAQ,EAAGH,CAAD,IAAOI,cAAc,CAACJ,CAAC,CAACE,MAAF,CAASX,KAAV,CAPjC;AAQE,QAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,EA8BS,GA9BT,eA+BE;AAAA;AAAA;AAAA;AAAA,YA/BF,eAgCE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCF,eAmCE;AAAA;AAAA;AAAA;AAAA,YAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAjDM;;GAAMH,Q;UAGMJ,W;;;KAHNI,Q","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { addComment } from \"../../store/post/actions\";\n\nexport const AddReply = ({ postId, comments }) => {\n  const [value, setValue] = React.useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const onAddReply = () => {\n    console.log(onAddReply);\n    dispatch(addComment({ comments: [...comments, value], postId }));\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <div className=\"form-group col-md-8\">\n        <label htmlFor=\"newPassword\" className=\"labelProfile\">\n          New password\n        </label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          id=\"newPassword\"\n          pattern=\".{5,}\"\n          title=\"minimum 5 characters\"\n          value={newPass}\n          onChange={(e) => setNewPass(e.target.value)}\n          required\n        />\n      </div>\n      <div className=\"form-group col-md-8\">\n        <label htmlFor=\"confirmPassword\" className=\"labelProfile\">\n          Confirm new password\n        </label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          id=\"confirmPassword\"\n          pattern=\".{5,}\"\n          title=\"minimum 5 characters\"\n          value={confirmPass}\n          onChange={(e) => setConfirmPass(e.target.value)}\n          required\n        />\n      </div>{\" \"}\n      <br></br>\n      <button type=\"submit\" className=\"btn btn-success col-3 btnSubmit\">\n        Submit\n      </button>\n      <br></br>\n    </Form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}