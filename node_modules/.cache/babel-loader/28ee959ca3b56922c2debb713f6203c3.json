{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Archive\\\\src\\\\Components\\\\List\\\\AddQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { addQuestion } from \"../../store/AskQuestion/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionAdd = _ref => {\n  _s();\n\n  let {\n    postId,\n    body\n  } = _ref;\n  const [value, setValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n\n  const onAddReply = () => {\n    console.log(onAddReply);\n    dispatch(addQuestion({\n      body: [...body, value],\n      postId\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"List-All-Comments-and-questions\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newPostForm\",\n      onSubmit: onAddReply,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postBody\",\n        children: \"Post:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postBody\",\n        required: true,\n        value: value,\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionAdd, \"NPbtUjvQSnkfrGkC/2oIzUuQxUQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = QuestionAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionAdd\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Archive/src/Components/List/AddQuestion.js"],"names":["React","useState","useDispatch","Button","Form","addQuestion","QuestionAdd","postId","body","value","setValue","dispatch","onAddReply","console","log","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,WAAT,QAA4B,iCAA5B;;AAEA,OAAO,MAAMC,WAAW,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAqB;AAC/C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1B;AAEA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,UAAU,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAD,IAAAA,QAAQ,CAACN,WAAW,CAAC;AAAEG,MAAAA,IAAI,EAAE,CAAC,GAAGA,IAAJ,EAAUC,KAAV,CAAR;AAA0BF,MAAAA;AAA1B,KAAD,CAAZ,CAAR;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAEK,UAAxC;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,KAAK,EAAEH,KAHT;AAIE,QAAA,QAAQ,EAAGM,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAxBM;;GAAMH,W;UAGMJ,W;;;KAHNI,W","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport { addQuestion } from \"../../store/AskQuestion/actions\";\r\n\r\nexport const QuestionAdd = ({ postId, body }) => {\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddReply = () => {\r\n    console.log(onAddReply);\r\n    dispatch(addQuestion({ body: [...body, value], postId }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"List-All-Comments-and-questions\">\r\n      <form className=\"newPostForm\" onSubmit={onAddReply}>\r\n        <label htmlFor=\"postBody\">Post:</label>\r\n        <textarea\r\n          id=\"postBody\"\r\n          required\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}