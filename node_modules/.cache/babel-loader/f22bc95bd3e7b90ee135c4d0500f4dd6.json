{"ast":null,"code":"// create async thunk action to fetch posts\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const fetchUsers = createAsyncThunk(\"post/fetchUsers\", async () => {\n  const response = await fetch(\"http://localhost:5000/users\");\n  const users = await response.json();\n  return users;\n});\nexport const addQuestion = createAsyncThunk(\"post/addQuestion\", async _ref => {\n  let {\n    Question,\n    userId\n  } = _ref;\n  const response = await fetch(`http://localhost:5000/posts/${userId}`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      Question\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const user = await response.json();\n  return user;\n});","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Archive/src/store/AskQuestion/actions.js"],"names":["createAsyncThunk","fetchUsers","response","fetch","users","json","addQuestion","Question","userId","method","body","JSON","stringify","headers","user"],"mappings":"AAAA;AAEA,SAASA,gBAAT,QAAiC,kBAAjC;AAEA,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CAAC,iBAAD,EAAoB,YAAY;AACxE,QAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;AACA,QAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AAEA,SAAOD,KAAP;AACD,CALyC,CAAnC;AAOP,OAAO,MAAME,WAAW,GAAGN,gBAAgB,CACzC,kBADyC,EAEzC,cAAgC;AAAA,MAAzB;AAAEO,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAyB;AAC9B,QAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BK,MAAO,EAAvC,EAA0C;AACpEC,IAAAA,MAAM,EAAE,MAD4D;AAEpEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBL,MAAAA;AADmB,KAAf,CAF8D;AAKpEM,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAL2D,GAA1C,CAA5B;AASA,QAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACG,IAAT,EAAnB;AAEA,SAAOS,IAAP;AACD,CAfwC,CAApC","sourcesContent":["// create async thunk action to fetch posts\r\n\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchUsers = createAsyncThunk(\"post/fetchUsers\", async () => {\r\n  const response = await fetch(\"http://localhost:5000/users\");\r\n  const users = await response.json();\r\n\r\n  return users;\r\n});\r\n\r\nexport const addQuestion = createAsyncThunk(\r\n  \"post/addQuestion\",\r\n  async ({ Question, userId }) => {\r\n    const response = await fetch(`http://localhost:5000/posts/${userId}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        Question,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const user = await response.json();\r\n\r\n    return user;\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}