{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Archive\\\\src\\\\Components\\\\List\\\\AddQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { addQuestion } from \"../../store/AskQuestion/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionAdd = _ref => {\n  _s();\n\n  let {\n    postId,\n    body\n  } = _ref;\n  const [post, setPost] = useState({\n    body: \"\"\n  });\n  const dispatch = useDispatch(); //const onAddQUestion = () => {\n  //console.log(onAddQUestion);\n  //dispatch(addQuestion({ body: [...body, setPost], postId }));\n  //};\n\n  const addPost = postDetails => dispatch(QuestionAdd(postDetails));\n\n  const handleChange = e => {\n    setPost({ ...post,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitUser = e => {\n    e.preventDefault();\n    addPost({\n      body: post.body\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    addQuestion: true,\n    children: [/*#__PURE__*/_jsxDEV(Form.TextArea, {\n      value: post,\n      onChange: e => setPost(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      content: \"Add Question\",\n      labelPosition: \"left\",\n      icon: \"edit\",\n      primary: true,\n      onClick: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionAdd, \"yzS8nWfI1A8ayKEDWSKMH6krXMY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = QuestionAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionAdd\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Archive/src/Components/List/AddQuestion.js"],"names":["React","useState","useDispatch","Button","Form","addQuestion","QuestionAdd","postId","body","post","setPost","dispatch","addPost","postDetails","handleChange","e","target","name","value","submitUser","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,WAAT,QAA4B,iCAA5B;;AAEA,OAAO,MAAMC,WAAW,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAqB;AAC/C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAC/BO,IAAAA,IAAI,EAAE;AADyB,GAAD,CAAhC;AAIA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B,CAL+C,CAO/C;AACA;AACA;AACA;;AAEA,QAAMU,OAAO,GAAIC,WAAD,IAAiBF,QAAQ,CAACL,WAAW,CAACO,WAAD,CAAZ,CAAzC;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BL,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACM,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFpB,KAAD,CAAP;AAID,GALD;;AAMA,QAAMC,UAAU,GAAIJ,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAR,IAAAA,OAAO,CAAC;AACNJ,MAAAA,IAAI,EAAEC,IAAI,CAACD;AADL,KAAD,CAAP;AAGD,GALD;;AAOA,sBACE,QAAC,IAAD;AAAM,IAAA,WAAW,MAAjB;AAAA,4BACE,QAAC,IAAD,CAAM,QAAN;AAAe,MAAA,KAAK,EAAEC,IAAtB;AAA4B,MAAA,QAAQ,EAAGM,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASE,KAAV;AAApD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,cADV;AAEE,MAAA,aAAa,EAAC,MAFhB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,OAAO,MAJT;AAKE,MAAA,OAAO,EAAEJ;AALX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAvCM;;GAAMR,W;UAKMJ,W;;;KALNI,W","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport { addQuestion } from \"../../store/AskQuestion/actions\";\r\n\r\nexport const QuestionAdd = ({ postId, body }) => {\r\n  const [post, setPost] = useState({\r\n    body: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //const onAddQUestion = () => {\r\n  //console.log(onAddQUestion);\r\n  //dispatch(addQuestion({ body: [...body, setPost], postId }));\r\n  //};\r\n\r\n  const addPost = (postDetails) => dispatch(QuestionAdd(postDetails));\r\n\r\n  const handleChange = (e) => {\r\n    setPost({\r\n      ...post,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const submitUser = (e) => {\r\n    e.preventDefault();\r\n    addPost({\r\n      body: post.body,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form addQuestion>\r\n      <Form.TextArea value={post} onChange={(e) => setPost(e.target.value)} />\r\n      <Button\r\n        content=\"Add Question\"\r\n        labelPosition=\"left\"\r\n        icon=\"edit\"\r\n        primary\r\n        onClick={handleChange}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}