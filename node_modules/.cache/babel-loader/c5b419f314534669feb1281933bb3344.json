{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Archive\\\\src\\\\Components\\\\Sing-In\\\\Sign-In.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Sign-In.scss\";\nimport { Checkbox, Grid, TextField, FormControlLabel, Paper, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIsLoggedIn } from \"../../store/user/reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signin = () => {\n  _s();\n\n  const [checked, setChecked] = useState(true);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState([]);\n  const {\n    users,\n    isLoggedIn\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  const handleOnChange = event => {\n    setChecked(event.target.checked);\n  };\n\n  const onChangeUsername = e => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"username:\", username, \"password: \", password);\n    console.log(users);\n    const user = users.find(user => user.name === username);\n\n    if (user) {\n      if (user.password === password) {\n        dispatch(setIsLoggedIn(true));\n      } else {\n        console.log(\"wrong password\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login-text\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 150\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          direction: \"column\",\n          justify: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Username\",\n                type: \"text\",\n                className: \"form-control\",\n                name: \"username\",\n                value: username,\n                onChange: onChangeUsername,\n                validations: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Password\",\n                type: \"password\",\n                className: \"form-control\",\n                name: \"password\",\n                value: password,\n                onChange: onChangePassword,\n                validations: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: checked,\n                  onChange: handleOnChange,\n                  label: \"Keep me logged in\",\n                  inputProps: {\n                    \"aria-label\": \"primary checkbox\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this),\n                label: \"Keep me logged in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                fullWidth: true,\n                children: [\" \", \"Login\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Signin, \"HdAhZtfZRjdljcPalFCbwEQjK2Y=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Archive/src/Components/Sing-In/Sign-In.jsx"],"names":["React","useState","Checkbox","Grid","TextField","FormControlLabel","Paper","Button","useDispatch","useSelector","setIsLoggedIn","Signin","checked","setChecked","username","setUsername","password","setPassword","users","isLoggedIn","state","user","dispatch","handleOnChange","event","target","onChangeUsername","e","value","onChangePassword","handleSubmit","preventDefault","console","log","find","name","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,gBAAP;AAEA,SACEC,QADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,gBAJF,EAKEC,KALF,EAMEC,MANF,QAOO,mBAPP;AAQA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM;AAAEiB,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAzC;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,cAAc,GAAIC,KAAD,IAAW;AAChCX,IAAAA,UAAU,CAACW,KAAK,CAACC,MAAN,CAAab,OAAd,CAAV;AACD,GAFD;;AAIA,QAAMc,gBAAgB,GAAIC,CAAD,IAAO;AAC9B,UAAMb,QAAQ,GAAGa,CAAC,CAACF,MAAF,CAASG,KAA1B;AACAb,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAHD;;AAKA,QAAMe,gBAAgB,GAAIF,CAAD,IAAO;AAC9B,UAAMX,QAAQ,GAAGW,CAAC,CAACF,MAAF,CAASG,KAA1B;AACAX,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAHD;;AAKA,QAAMc,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBnB,QAAzB,EAAmC,YAAnC,EAAiDE,QAAjD;AAEAgB,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AAEA,UAAMG,IAAI,GAAGH,KAAK,CAACgB,IAAN,CAAYb,IAAD,IAAUA,IAAI,CAACc,IAAL,KAAcrB,QAAnC,CAAb;;AACA,QAAIO,IAAJ,EAAU;AACR,UAAIA,IAAI,CAACL,QAAL,KAAkBA,QAAtB,EAAgC;AAC9BM,QAAAA,QAAQ,CAACZ,aAAa,CAAC,IAAD,CAAd,CAAR;AACD,OAFD,MAEO;AACLsB,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF;AACF,GAdD;;AAgBA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,KAAK,EAAE;AAAEG,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,6BACE,QAAC,KAAD;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,OAAO,EAAE,CAFX;AAGE,UAAA,SAAS,EAAE,QAHb;AAIE,UAAA,OAAO,EAAE,QAJX;AAKE,UAAA,UAAU,EAAE,QALd;AAAA,iCAOE;AAAM,YAAA,QAAQ,EAAEN,YAAhB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,KAAK,EAAC,UADR;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,SAAS,EAAC,cAHZ;AAIE,gBAAA,IAAI,EAAC,UAJP;AAKE,gBAAA,KAAK,EAAEhB,QALT;AAME,gBAAA,QAAQ,EAAEY,gBANZ;AAOE,gBAAA,WAAW,EAAE;AAPf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,KAAK,EAAC,UADR;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,SAAS,EAAC,cAHZ;AAIE,gBAAA,IAAI,EAAC,UAJP;AAKE,gBAAA,KAAK,EAAEV,QALT;AAME,gBAAA,QAAQ,EAAEa,gBANZ;AAOE,gBAAA,WAAW,EAAE;AAPf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAZF,eAuBE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,gBAAD;AACE,gBAAA,OAAO,eACL,QAAC,QAAD;AACE,kBAAA,OAAO,EAAEjB,OADX;AAEE,kBAAA,QAAQ,EAAEW,cAFZ;AAGE,kBAAA,KAAK,EAAE,mBAHT;AAIE,kBAAA,UAAU,EAAE;AAAE,kCAAc;AAAhB;AAJd;AAAA;AAAA;AAAA;AAAA,wBAFJ;AASE,gBAAA,KAAK,EAAC;AATR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAvBF,eAoCE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,SAAS,MAA/B;AAAA,2BACG,GADH,WAEQ,GAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA4DD,CAlGD;;GAAMZ,M;UAK0BF,W,EACbD,W;;;KANbG,M;AAoGN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./Sign-In.scss\";\n\nimport {\n  Checkbox,\n  Grid,\n  TextField,\n  FormControlLabel,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIsLoggedIn } from \"../../store/user/reducer\";\n\nconst Signin = () => {\n  const [checked, setChecked] = useState(true);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState([]);\n\n  const { users, isLoggedIn } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const handleOnChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"username:\", username, \"password: \", password);\n\n    console.log(users);\n\n    const user = users.find((user) => user.name === username);\n    if (user) {\n      if (user.password === password) {\n        dispatch(setIsLoggedIn(true));\n      } else {\n        console.log(\"wrong password\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className=\"Login-text\">Login</div>\n      <div style={{ padding: 150 }}>\n        <Paper>\n          <Grid\n            container\n            spacing={3}\n            direction={\"column\"}\n            justify={\"center\"}\n            alignItems={\"center\"}\n          >\n            <form onSubmit={handleSubmit}>\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Username\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                  validations={\"\"}\n                ></TextField>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Password\"\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={\"\"}\n                ></TextField>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={checked}\n                      onChange={handleOnChange}\n                      label={\"Keep me logged in\"}\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                    />\n                  }\n                  label=\"Keep me logged in\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button type=\"submit\" fullWidth>\n                  {\" \"}\n                  Login{\" \"}\n                </Button>\n              </Grid>\n            </form>\n          </Grid>\n        </Paper>\n      </div>\n    </>\n  );\n};\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}